[{"/Users/bobby2/Desktop/HarvardOnline/sideprojects/react-router-demo/src/reportWebVitals.js":"1","/Users/bobby2/Desktop/HarvardOnline/sideprojects/react-router-demo/src/App.js":"2","/Users/bobby2/Desktop/HarvardOnline/sideprojects/react-router-demo/src/index.js":"3","/Users/bobby2/Desktop/HarvardOnline/sideprojects/react-router-demo/src/Home.js":"4","/Users/bobby2/Desktop/HarvardOnline/sideprojects/react-router-demo/src/components/Navbar.js":"5","/Users/bobby2/Desktop/HarvardOnline/sideprojects/react-router-demo/src/About.js":"6"},{"size":362,"mtime":1610994742282,"results":"7","hashOfConfig":"8"},{"size":356,"mtime":1611243451114,"results":"9","hashOfConfig":"8"},{"size":540,"mtime":1611187426546,"results":"10","hashOfConfig":"8"},{"size":493,"mtime":1611186058751,"results":"11","hashOfConfig":"8"},{"size":1704,"mtime":1611187847716,"results":"12","hashOfConfig":"8"},{"size":488,"mtime":1611186125292,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1rwy30k",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/bobby2/Desktop/HarvardOnline/sideprojects/react-router-demo/src/reportWebVitals.js",[],"/Users/bobby2/Desktop/HarvardOnline/sideprojects/react-router-demo/src/App.js",[],"/Users/bobby2/Desktop/HarvardOnline/sideprojects/react-router-demo/src/index.js",[],"/Users/bobby2/Desktop/HarvardOnline/sideprojects/react-router-demo/src/Home.js",[],"/Users/bobby2/Desktop/HarvardOnline/sideprojects/react-router-demo/src/components/Navbar.js",["27","28"],"import React, { useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\n//import Home from \"./Home.js\"\n\nconst Navbar = () => {\n  const [isOpen, setOpen] = useState(false);\n  return (\n    <nav\n      className=\"navbar is-primary\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <a\n            role=\"button\"\n            className={`navbar-burger burger ${isOpen && \"is-active\"}`}\n            aria-label=\"menu\"\n            aria-expanded=\"false\"\n            onClick={() => setOpen(!isOpen)}\n          >\n            <span aria-hidden=\"true\"></span>\n            <span aria-hidden=\"true\"></span>\n            <span aria-hidden=\"true\"></span>\n          </a>\n        </div>\n\n        <div className={`navbar-menu ${isOpen && \"is-active\"}`}>\n          <div className=\"navbar-start\">\n            <NavLink className=\"navbar-item\" activeClassName=\"is-active\" to=\"/\">\n              Home\n            </NavLink>\n\n            <NavLink\n              className=\"navbar-item\"\n              activeClassName=\"is-active\"\n              to=\"/about\"\n            >\n              About\n            </NavLink>\n\n            <NavLink\n              className=\"navbar-item\"\n              activeClassName=\"is-active\"\n              to=\"/profile\"\n            >\n              Profile\n            </NavLink>\n          </div>\n\n          <div className=\"navbar-end\">\n            <div className=\"navbar-item\">\n              <div className=\"buttons\">\n                <a className=\"button is-white\">Log in</a>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;","/Users/bobby2/Desktop/HarvardOnline/sideprojects/react-router-demo/src/About.js",[],{"ruleId":"29","severity":1,"message":"30","line":15,"column":11,"nodeType":"31","endLine":21,"endColumn":12},{"ruleId":"29","severity":1,"message":"30","line":54,"column":17,"nodeType":"31","endLine":54,"endColumn":48},"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement"]